user  root;

events {
    worker_connections  4096;  ## Default: 1024
}

http {
    include    /etc/nginx/proxy_params;
    include    /etc/nginx/mime.types;
    index    index.html index.htm;

    # Nécéssaire pour servir correctement les websocket de code-server
    # Cf. https://www.tutorialspoint.com/how-to-configure-nginx-as-reverse-proxy-for-websocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream websocket {
        server 127.0.0.1:1991;
    }

    server { 
        listen       80;

        location /env/  {
            # On sert le wrapper html, c'est à dire notre page web avec
            # les instructions du TP + un iframe vers l'éditeur
            root    /usr/share/nginx/html/;
        }

        location /  {
            set $should_redirect 1;
            if ($request_uri != "/" ) {
                   set $should_redirect 0;
            }
            if ($http_referer ~* ".*/env/$" ) {
                   set $should_redirect 0;
            }
            if ($should_redirect) {
                    # La mise en cache de la redirection n'est pas souhaitée.
                    # (sinon, boucle infinie de redirections sur le wrapper)
                    # Attention, certains clients peuvent ignorer ce header (la RFC a un peu évolué sur ce sujet.)
                    # Version à jour : https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx
                    add_header Cache-Control no-cache;
                    # Si accès direct à '/', on redirige vers '/env/' sauf 
                    # si le referer est le wrapper (on est alors soit dans
                    # l'iframe du wrapper, soit on a cliqué sur un lien 
                    # depuis le wrapper)
                    # TODO utiliser le header X-Forwarded-Proto s'il est dispo, sinon $scheme
                    return 302 $scheme://$http_host/env/;
                   break;
            }
            
            # Tout le reste : reverse-proxy de l'éditeur vscode
            proxy_pass      http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    }
}